
package webservice.stub;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ServiceReceiverImplService", targetNamespace = "http://server.webservice/", wsdlLocation = "file:///home/visiri/IdeaProjects/P2PFileSharer/Webservice/src/p2pFilesharer/webservice/p2pFilesharer/webservice/stub/p2pFilesharer.webservice.server.ServiceReceiver.wsdl")
public class ServiceReceiverImplService
    extends Service
{

    private final static URL SERVICERECEIVERIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException SERVICERECEIVERIMPLSERVICE_EXCEPTION;
    private final static QName SERVICERECEIVERIMPLSERVICE_QNAME = new QName("http://server.webservice.p2pFilesharer/", "ServiceReceiverImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:///home/visiri/IdeaProjects/P2PFileSharer/Webservice/src/p2pFilesharer/webservice/p2pFilesharer/webservice/stub/p2pFilesharer.webservice.server.ServiceReceiver.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SERVICERECEIVERIMPLSERVICE_WSDL_LOCATION = url;
        SERVICERECEIVERIMPLSERVICE_EXCEPTION = e;
    }

    public ServiceReceiverImplService() {
        super(__getWsdlLocation(), SERVICERECEIVERIMPLSERVICE_QNAME);
    }

    public ServiceReceiverImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SERVICERECEIVERIMPLSERVICE_QNAME, features);
    }

    public ServiceReceiverImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICERECEIVERIMPLSERVICE_QNAME);
    }

    public ServiceReceiverImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICERECEIVERIMPLSERVICE_QNAME, features);
    }

    public ServiceReceiverImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceReceiverImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServiceReceiver
     */
    @WebEndpoint(name = "ServiceReceiverImplPort")
    public ServiceReceiver getServiceReceiverImplPort() {
        return super.getPort(new QName("http://server.webservice.p2pFilesharer/", "ServiceReceiverImplPort"), ServiceReceiver.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceReceiver
     */
    @WebEndpoint(name = "ServiceReceiverImplPort")
    public ServiceReceiver getServiceReceiverImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://server.webservice.p2pFilesharer/", "ServiceReceiverImplPort"), ServiceReceiver.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SERVICERECEIVERIMPLSERVICE_EXCEPTION!= null) {
            throw SERVICERECEIVERIMPLSERVICE_EXCEPTION;
        }
        return SERVICERECEIVERIMPLSERVICE_WSDL_LOCATION;
    }

}
